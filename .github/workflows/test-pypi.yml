name: TestPyPI

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - master
jobs:
  lint:
    name: "Code quality check"
    runs-on: ubuntu-latest
    if: |
      !startsWith(github.event.head_commit.message, 'bump:') &&
      !contains(github.event.head_commit.message, '[skip_ci]')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.9'
          architecture: x64
      - name: Checkout submodules
        run: git submodule update --init --recursive --depth=1
      - name: Install nox
        run: pip install nox==2021.6.12
      - name: Install poetry
        run:  |
          set -e
          python -m ensurepip
          python -m pip install -U pip wheel
          pip install poetry==1.1.11
      - name: Run Safety test
        run: nox -s safety
      - name: Run nox tests
        run: nox -s tests -p 3.9 -- -m "not slow"
  build_wheels:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    if: |
      !startsWith(github.event.head_commit.message, 'bump:') &&
      !contains(github.event.head_commit.message, '[skip_ci]')
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # , macos-latest, windows-latest]
        python-version: ['3.9']
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.python-version}}
        architecture: x64
    - name: Install poetry
      run:  |
        set -e
        python -m ensurepip
        python -m pip install -U pip wheel
        pip install poetry==1.1.4
    - run: |
        set -e
        poetry version patch
        version=$(poetry version --short)
        poetry version $version.dev$(date +%s)
    - name: Checkout submodules
      run: git submodule update --init --recursive --depth=1
    - run: poetry install --no-dev
    - name: Build wheel
      run:  poetry build -f wheel
    - name: Build sdist
      run:  python setup-generated.py sdist --formats=gztar,xztar,zip
      if:   matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
    - name: GitHub Release wheels (deploy)
      if: (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags'))
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish to TestPyPI
      run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry publish -r testpypi -u __token__ -p ${{ secrets.TEST_PYPI_TOKEN }}
